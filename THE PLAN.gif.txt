OKAY

okay

so

Here's what needs to happen. TWO POINT OH

there's two control heads in the CA
the first shifts the write head on the message to be encoded forward or backward
and the second shifts a bit up or down

you output the encoded message along with (a hash?) of the initial conditions used in the automaton and the rule #
you also need to know where the control heads started 
(they should be as far apart as possible, since the ends leak into each other that means one on the edge and one
in the middle)
and how many generations you used (more generations = more secure crypto)


to unencrypt, you have to know the initial conditions and the rule, and then run it backwards
(if control heads are nonconstant, you'll have to know those as well - also # of generations. But those might be constant)
this requires applying the CA rules in reverse (accounting for weird shit I did to clip it to a certain size)
for the correct number of generations.


message is obvs a string of characters, which are represented by 2 bytes I think? That's what they are in C anyway
so when you shift a bit, you literally just add or subtract one. Unless you can think of a better way.

Maybe if you xor it with a certain number of bits every generation? Something fancy like that

okay

I did a thing with a thing and a thing.